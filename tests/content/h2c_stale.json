{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2016-11-12T19:27:18.215422+00:00",
  "repo": "MikeBishop/http2-certs",
  "labels": [
    {
      "name": "bug",
      "description": null,
      "color": "fc2929"
    },
    {
      "name": "duplicate",
      "description": null,
      "color": "cccccc"
    },
    {
      "name": "enhancement",
      "description": null,
      "color": "84b6eb"
    },
    {
      "name": "help wanted",
      "description": null,
      "color": "159818"
    },
    {
      "name": "invalid",
      "description": null,
      "color": "e6e6e6"
    },
    {
      "name": "question",
      "description": null,
      "color": "cc317c"
    },
    {
      "name": "wontfix",
      "description": null,
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "MDU6SXNzdWUxNTUzNDUxNTE=",
      "title": "Rename the repo?",
      "url": "https://github.com/MikeBishop/http2-certs/issues/1",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Just `http2-certs` perhaps.\n",
      "createdAt": "2016-05-17T19:45:06Z",
      "updatedAt": "2016-05-17T21:02:37Z",
      "closedAt": "2016-05-17T21:02:37Z",
      "comments": [
        {
          "author": "MikeBishop",
          "authorAssociation": "OWNER",
          "body": "Didn't know how to do that before.  Done.\n",
          "createdAt": "2016-05-17T21:02:37Z",
          "updatedAt": "2016-05-17T21:02:37Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "MDU6SXNzdWUxNTUzNjE4MTA=",
      "title": "Security review:  Repeated signatures of same content",
      "url": "https://github.com/MikeBishop/http2-certs/issues/2",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Currently, we do a single TLS export for the session, then sign it repeatedly with every key used by either peer.  Brian S. raises the question of whether it would be better to incorporate the Cert-ID into the exported value so that each signature is of a unique value.\n\nI'm not aware that this is necessary, but I'd like to be officially told that by someone whose job is crypto.  If it's needed, it's easy enough to add.\n",
      "createdAt": "2016-05-17T21:05:57Z",
      "updatedAt": "2017-10-30T17:55:56Z",
      "closedAt": "2017-10-30T17:55:56Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "An easy addition would be to sign the request, or just the identifier for the request in addition to the exporter value.  Alternatively, you could feed the same information to the exporter so that you are signing something else.\n",
          "createdAt": "2016-05-18T12:59:57Z",
          "updatedAt": "2016-05-18T14:47:56Z"
        },
        {
          "author": "grittygrease",
          "authorAssociation": "COLLABORATOR",
          "body": "The certificate_request_context is defined by the application, it can be made unique per request to protect against this. My suggestion is to use the Request-ID as the certificate_request_context. A nonce could also be appended to the Request-ID.",
          "createdAt": "2017-10-24T02:54:38Z",
          "updatedAt": "2017-10-24T02:54:38Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "OWNER",
          "body": "In e-mail, we agreed on Cert-ID, and the draft prohibits sending multiple things under the same Cert-ID.  I think this is now addressed.",
          "createdAt": "2017-10-30T17:55:56Z",
          "updatedAt": "2017-10-30T17:55:56Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "MDU6SXNzdWUxNTUzNjQwNDA=",
      "title": "Wasted bits:  HashAndSignatureAlgorithm",
      "url": "https://github.com/MikeBishop/http2-certs/issues/3",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "HashAndSignatureAlgorithm is a sixteen-bit value, but allowed values are currently limited to sixteen (i.e. 4 bits).  Keep the current length so we can reuse TLS-defined values, or shave?  Even if we need to overflow into additional SETTINGS values someday, eight bits seems more than sufficient.\n",
      "createdAt": "2016-05-17T21:16:59Z",
      "updatedAt": "2017-10-30T17:56:31Z",
      "closedAt": "2017-10-30T17:56:30Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think that this level of waste is worth worrying about.\n",
          "createdAt": "2016-05-18T13:00:23Z",
          "updatedAt": "2016-05-18T13:00:23Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "OWNER",
          "body": "Moot (for now, until we fix #12).",
          "createdAt": "2017-10-30T17:56:30Z",
          "updatedAt": "2017-10-30T17:56:30Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "MDU6SXNzdWUxNTU1MjEzNDk=",
      "title": "Cross-protocol interaction",
      "url": "https://github.com/MikeBishop/http2-certs/issues/4",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This usage creates another context in which the same key is used for signing in two different contexts.  We need to be careful to a) make sure that those signatures can't be transplanted elsewhere, and b) document that we have done so.\n",
      "createdAt": "2016-05-18T14:49:30Z",
      "updatedAt": "2017-10-30T17:03:48Z",
      "closedAt": null,
      "comments": [
        {
          "author": "grittygrease",
          "authorAssociation": "COLLABORATOR",
          "body": "The signature covers the context string \"Exported Authenticator\" (which is not NULL-terminated). I'll add that text to the security considerations.",
          "createdAt": "2017-10-30T17:03:48Z",
          "updatedAt": "2017-10-30T17:03:48Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "MDU6SXNzdWUxNTU3OTAwMjA=",
      "title": "Can we get rid of bitmaps?",
      "url": "https://github.com/MikeBishop/http2-certs/issues/5",
      "state": "OPEN",
      "author": "MikeBishop",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Personal opinion, plus Andrei's feedback:\n\nI really dislike the bitmap approach -- I'd much rather use the TLS IANA codepoints that exist.  It's more extensible, better layered (can just relay uninterpreted data to the crypto components)\n- Can we just get this information from the TLS stack?\n- Do we need a TLV-style equivalent to the SETTINGS frame?\n- Get rid of unsolicited certs and put this back in REQUEST?\n\nThis would simplify the SETTINGS value and reconcile it with the algorithm field on the PROOF.\n",
      "createdAt": "2016-05-19T17:18:50Z",
      "updatedAt": "2017-10-23T06:03:32Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "The unsolicited certs is the feature that really pushed this in this direction.  Those seem to be useful, particularly when it comes to latency.\n",
          "createdAt": "2016-05-19T20:48:49Z",
          "updatedAt": "2016-05-19T20:48:49Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "OWNER",
          "body": "I'm almost wondering whether there's value in, say, an EXTENDED_SETTINGS extension that provides TLV settings values.  The more I try to create extensions in HTTP/2, the more I feel like the fixed 32-bit values are a mite constrained for communicating anything useful.  I don't want to build it in this doc (enough frames already!), but a normative reference might simplify the machinery here. If we could just send an array, then use the same codepoints TLS does, we become much more future-proof and can make the negotiation and PROOF frames match.  Not as compact, but still....\n",
          "createdAt": "2016-05-19T21:19:00Z",
          "updatedAt": "2016-05-19T21:19:00Z"
        },
        {
          "author": "grittygrease",
          "authorAssociation": "COLLABORATOR",
          "body": "I tend to prefer the EXTENDED_SETTINGS option, it allows the reuse of the TLS IANA registries and should require less maintenance when useful new TLS 1.3 extensions are inevitably introduced. \n",
          "createdAt": "2016-06-25T10:28:55Z",
          "updatedAt": "2016-06-25T10:28:55Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "I think that we sorted this one out with the split.",
          "createdAt": "2017-10-23T06:03:32Z",
          "updatedAt": "2017-10-23T06:03:32Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "MDU6SXNzdWUxNTU3OTAzMzM=",
      "title": "RSA-PSS versus RSA-PSS",
      "url": "https://github.com/MikeBishop/http2-certs/issues/6",
      "state": "OPEN",
      "author": "MikeBishop",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "From Andrei:\n\n> nearly all available certs today use RSA-PKCS1.5 rather than RSA-PSS. Are you relying on all sites and clients getting new certs to support this?\n\nThe bitmap is about the signatures which we support in the PROOF frame, not about how the certificates themselves are signed.  Now, whether existing RSA certs can generate RSA-PSS signatures is a question for Crypto folks \u2013 I would think that an RSA key can be used for multiple signing schemes, but I could also be wrong.  Issue to track confirming.\n",
      "createdAt": "2016-05-19T17:20:28Z",
      "updatedAt": "2016-05-20T17:19:24Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "For TLS, we decided to allow PKCS#1.5.  That was reluctant.  Here, we can limit the choice safely, I think.  Those people that have to spend extra cycles, or who can't do PSS can fall back to less optimized paths (i.e., multiple connections).\n",
          "createdAt": "2016-05-19T20:47:38Z",
          "updatedAt": "2016-05-19T20:47:38Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "OWNER",
          "body": "I agree on the safety of the constraint.  Where I'm out of my depth is whether PSS needs a different _cert_ or just a different signature algorithm with the same cert.\n",
          "createdAt": "2016-05-19T21:20:33Z",
          "updatedAt": "2016-05-19T21:20:33Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "So there is a different OID for the two algorithms, but ultimately it's just an RSA key, so it can be used with either if you are willing to do so.  I believe that this is the intent with PSS in TLS 1.3.\n",
          "createdAt": "2016-05-20T17:19:24Z",
          "updatedAt": "2016-05-20T17:19:24Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "MDU6SXNzdWUxNTU3OTA2ODc=",
      "title": "Specific to certificates?",
      "url": "https://github.com/MikeBishop/http2-certs/issues/7",
      "state": "OPEN",
      "author": "MikeBishop",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "From Andrei:\n\n> all frame names etc. are very cert-specific. You may want to rename them \u201cauthenticators\u201d or similar, and include auth type fields to accommodate e.g. raw keys or PSK. Or you could say non-certificate auth would have to use new frame types defined in a new spec.\n\nI was initially uncertain that there was a use-case for proving multiple raw keys (since what we\u2019re ultimately trying to prove with certs is a strong name binding), but coupled with DANE records as supporting data, I think you could get a name binding off a raw key as well.  Browsers probably won\u2019t support it, but that doesn\u2019t mean the protocol couldn\u2019t allow the flexibility to do it for IoT.\n",
      "createdAt": "2016-05-19T17:22:11Z",
      "updatedAt": "2017-10-23T06:04:01Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Ugh, DANE.  We run the risk of being overly generic here.  Let's just assume that it's a certificate and then do what TLS does and pack non-certificate things into certificates if it comes to that.\n",
          "createdAt": "2016-05-19T20:46:13Z",
          "updatedAt": "2016-05-19T20:46:13Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in the split.",
          "createdAt": "2017-10-23T06:04:01Z",
          "updatedAt": "2017-10-23T06:04:01Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "MDU6SXNzdWUxNTU3OTEwNTg=",
      "title": "Matching rules for subjectAltName",
      "url": "https://github.com/MikeBishop/http2-certs/issues/8",
      "state": "OPEN",
      "author": "MikeBishop",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "From Andrei:\n\n> if you require support for this OID [subjectAltName] in the CERTIFICATE_REQUEST, then you have to define matching rules (see https://tools.ietf.org/html/draft-ietf-tls-tls13-12#section-6.3.3.2 for an example).\n\nI would have thought they were already defined somewhere, but if not\u2026.\n",
      "createdAt": "2016-05-19T17:24:09Z",
      "updatedAt": "2016-05-19T20:45:05Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "RFC 6125\n",
          "createdAt": "2016-05-19T20:45:05Z",
          "updatedAt": "2016-05-19T20:45:05Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "MDU6SXNzdWUxNTU3OTE0MDA=",
      "title": "Do you ever include root certs?",
      "url": "https://github.com/MikeBishop/http2-certs/issues/9",
      "state": "OPEN",
      "author": "MikeBishop",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "From Andrei:\n\n> {#http-certificate}: \u201cA certificate which specifies a trust anchor MAY be omitted\u201d \u2013 why would one ever want to send the root? The peer can\u2019t use it in any way, and in TLS, it\u2019s been a source of interop issues.\n\nSHOULD?  MUST?  Though, back to DANE, if DNS says that the cert must chain to a CA that the client doesn\u2019t otherwise trust, wouldn\u2019t the client need to see that cert to validate the signature?\n\nI defer to my TLS brethren on this issue.\n",
      "createdAt": "2016-05-19T17:25:52Z",
      "updatedAt": "2016-05-19T20:44:50Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "This is, I think, a complete copy of the TLS language:\n\n> Because certificate validation requires that trust anchors be distributed independently, a certificate that specifies a trust anchor MAY be omitted from the chain, provided that supported peers are known to possess any omitted certificates.\n\nThe point being that what comprises a \"root\" can be vague.  For example, certification paths can include multiple potential trust anchors.\n",
          "createdAt": "2016-05-19T20:44:50Z",
          "updatedAt": "2016-05-19T20:44:50Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "MDU6SXNzdWUxNTU4NTA2ODc=",
      "title": "Memory and forgetting",
      "url": "https://github.com/MikeBishop/http2-certs/issues/10",
      "state": "OPEN",
      "author": "MikeBishop",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Requiring the peer to cache everything you send for the lifetime of the connection invites DoS attacks on memory consumption with giant/numerous (possibly fake) certs.  There should be a way to signal that a certificate/request has been discarded; senders would need to re-send if they want to use in the future.\n",
      "createdAt": "2016-05-19T22:35:15Z",
      "updatedAt": "2016-05-19T22:35:15Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 11,
      "id": "MDExOlB1bGxSZXF1ZXN0OTE3MTAxMzE=",
      "title": "Incorporate draft-sullivan-tls-exported-authenticator-00",
      "url": "https://github.com/MikeBishop/http2-certs/pull/11",
      "state": "MERGED",
      "author": "grittygrease",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This change provides a huge simplification of the draft, moving\r\nthe certificate choice and cryptographic operations into the\r\nTLS stack via the Exported Authenticator draft. Many things\r\ndeleted, few things added.",
      "createdAt": "2016-10-31T23:30:18Z",
      "updatedAt": "2016-10-31T23:36:06Z",
      "baseRepository": "MikeBishop/http2-certs",
      "baseRefName": "master",
      "baseRefOid": "6e844e408ae3d7df11dc3dcd43081f547c21d159",
      "headRepository": "grittygrease/http2-certs",
      "headRefName": "master",
      "headRefOid": "6d51a6d4562b6f5821c4aded2974c445b90cde65",
      "closedAt": "2016-10-31T23:36:06Z",
      "mergedAt": "2016-10-31T23:36:06Z",
      "mergedBy": "MikeBishop",
      "mergeCommit": {
        "oid": "0b945100720d58c37333efb0270648388832c9f6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU0NTU5Ng==",
          "commit": {
            "abbreviatedOid": "6d51a6d"
          },
          "author": "MikeBishop",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Loses cert size issue, I suspect, but that's something we can probably work around later.\n",
          "createdAt": "2016-10-31T23:35:57Z",
          "updatedAt": "2016-10-31T23:35:57Z",
          "comments": []
        }
      ]
    }
  ]
}